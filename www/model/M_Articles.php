<?phprequire_once '/model/M_PdoDB.php';require_once '/core/Database.php';class M_Articles {    //TODO: table prefix       public $table = "pro_articles";    private $DB;    static private $instance = "";    public function __construct() {        $this->DB = new Database();    }    static public function Instance() {        if (self::$instance == null) {            self::$instance = new M_Articles();        }        return self::$instance;    }// Список всех статей//    function all() {        $query = "SELECT * FROM pro_articles ORDER BY id_article DESC";        $article = array();        if ($article = $this->DB->Select($query)) {            return $article;        } else {            return FALSE;        }    }//// Конкретная статья//    function get($id_article) {        // Запрос.        $query = "SELECT * FROM pro_articles            WHERE id_article = :id";        $param = array(            "id" => $id_article        );        if ($article = $this->DB->Select($query, $param)) {            return $article;        } else {            return FALSE;        }    }//// Добавить статью//    function add($title, $content) {        // Проверка.        if ($title == '')            return false;        $object = array(            'title' => trim($title),            'content' => trim($content)        );        if ($this->DB->Insert($this->table, $object)) {            return true;        } else {            return FALSE;        }    }//// Изменить статью//    function edit($id_article, $title, $content) {        try {            $query = "UPDATE pro_articles SET title = :title, content = :content        WHERE id_article = :id_article";            $stmt = M_PdoDB::prepare($query);            $stmt->bindParam(':title', $title, PDO::PARAM_STR);            $stmt->bindParam(':content', $content, PDO::PARAM_STR);            $stmt->bindParam(':id_article', $id_article, PDO::PARAM_INT);            if (!$stmt->execute()) {                $err = $stmt->errorInfo();                throw new PDOException($err[2]);            }            return true;        } catch (PDOException $e) {            echo "ошибка редактирования статьи " . $e;            return false;        }    }//// Удалить статью//    function delete($id_article) {        try {            $query = "DELETE FROM pro_articles WHERE id_article = :id";            $stmt = M_PdoDB::prepare($query);            $stmt->bindParam(':id', $id_article, PDO::PARAM_INT);            $stmt->execute();            if ($stmt->execute()) {                return true;            } else {                echo "не удалено";                return false;            }        } catch (PDOException $e) {            echo "ошибка удаления статьи " . $e;            return false;        }    }//// Короткое описание статьи//    function intro($article) {        // $article - это ассоциативный массив, представляющий статью        $intros = array();        $anonse = 90;        if ($article)            try {                foreach ($article as $intro) {                    // Запрос. выбираем текст слева = анонсу                    $id_intro = (int) $intro['id_article'];                    $query = "SELECT LEFT(content, $anonse) as intro, id_article            FROM pro_articles            WHERE id_article = '$id_intro'                ORDER BY id_article DESC";                    $stmt = M_PdoDB::query($query);                    $row = $stmt->fetch();                    $row['intro'] = $row['intro'] . "...";                    $intros[$row['id_article']] = $row['intro'];                }                return $intros;            } catch (PDOException $e) {                echo "ошибка выборки интро " . $e;                return false;            }    }}?>